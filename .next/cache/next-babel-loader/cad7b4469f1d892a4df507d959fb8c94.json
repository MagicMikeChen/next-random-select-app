{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\n\nvar ResultView = function ResultView() {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, resultName), __jsx(\"img\", {\n    alt: \"monster\",\n    src: \"https://robohash.org/\".concat(resultName, \"?set=set4&size=300x300\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Try Again\")));\n};\n\n_c = ResultView;\n\nvar redirectPage = function redirectPage() {\n  Router.push(\"/result_page\");\n};\n\nvar Result = function Result(props) {\n  var resultName = props.resultName,\n      isCountDown = props.isCountDown;\n  return __jsx(React.Fragment, null, isCountDown ? __jsx(ResultView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }\n  }) : redirectPage());\n};\n\n_c2 = Result;\nexport default Result;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResultView\");\n$RefreshReg$(_c2, \"Result\");","map":{"version":3,"sources":["/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js"],"names":["Link","ResultView","resultName","redirectPage","Router","push","Result","props","isCountDown"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,UAAN,CADF,EAEE;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,GAAG,iCAA0BA,UAA1B,2BAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CANF,CADF;AAYD,CAbD;;KAAMD,U;;AAeN,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,EAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ;AACD,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAChBL,UADgB,GACYK,KADZ,CAChBL,UADgB;AAAA,MACJM,WADI,GACYD,KADZ,CACJC,WADI;AAGxB,SAAO,4BAAGA,WAAW,GAAG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoBL,YAAY,EAA9C,CAAP;AACD,CAJD;;MAAMG,M;AAKN,eAAeA,MAAf","sourcesContent":["import Link from \"next/link\";\n\nconst ResultView = () => {\n  return (\n    <>\n      <div>{resultName}</div>\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${resultName}?set=set4&size=300x300`}\n      />\n      <Link href=\"/\">\n        <a>Try Again</a>\n      </Link>\n    </>\n  );\n};\n\nconst redirectPage = () => {\n  Router.push(\"/result_page\");\n};\n\nconst Result = (props) => {\n  const { resultName, isCountDown } = props;\n\n  return <>{isCountDown ? <ResultView /> : redirectPage()}</>;\n};\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}