{"ast":null,"code":"var _jsxFileName = \"/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { Row, Col, Container, Card, CardImg, CardText } from \"@bootstrap-styled/v4\";\n\nconst ResultView = ({\n  resultName\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    src: `https://robohash.org/${resultName}?set=set4&size=300x300`,\n    alt: \"monster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, resultName)))), __jsx(Col, {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    src: `https://robohash.org/${resultName}?set=set4&size=300x300`,\n    alt: \"monster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, resultName))))), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Try Again\")));\n};\n\nconst Result = props => {\n  const {\n    resultName,\n    isCountDown\n  } = props;\n  return __jsx(React.Fragment, null, isCountDown ? __jsx(ResultView, {\n    resultName: resultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }) : __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Try Again\")));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js"],"names":["Link","Row","Col","Container","Card","CardImg","CardText","ResultView","resultName","Result","props","isCountDown"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,QANF,QAOO,sBAPP;;AASA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,SACE,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,GAAG,MADL;AAEE,IAAA,GAAG,EAAG,wBAAuBA,UAAW,wBAF1C;AAGE,IAAA,GAAG,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWA,UAAX,CANF,CADF,CADF,CADF,EAaE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,GAAG,MADL;AAEE,IAAA,GAAG,EAAG,wBAAuBA,UAAW,wBAF1C;AAGE,IAAA,GAAG,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWA,UAAX,CANF,CADF,CADF,CAbF,CADF,EA2BE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CA3BF,CADF;AAiCD,CAlCD;;AAoCA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEF,IAAAA,UAAF;AAAcG,IAAAA;AAAd,MAA8BD,KAApC;AAEA,SACE,4BACGC,WAAW,GACV,MAAC,UAAD;AAAY,IAAA,UAAU,EAAEH,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAGV,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAJJ,CADF;AAWD,CAdD;;AAeA,eAAeC,MAAf","sourcesContent":["import Link from \"next/link\";\nimport {\n  Row,\n  Col,\n  Container,\n  Card,\n  CardImg,\n  CardText,\n} from \"@bootstrap-styled/v4\";\n\nconst ResultView = ({ resultName }) => {\n  return (\n    <>\n      <Row>\n        <Col className=\"col-sm-12\">\n          <Container>\n            <Card>\n              <CardImg\n                top\n                src={`https://robohash.org/${resultName}?set=set4&size=300x300`}\n                alt=\"monster\"\n              />\n              <CardText>{resultName}</CardText>\n            </Card>\n          </Container>\n        </Col>\n        <Col className=\"col-sm-6\">\n          <Container>\n            <Card>\n              <CardImg\n                top\n                src={`https://robohash.org/${resultName}?set=set4&size=300x300`}\n                alt=\"monster\"\n              />\n              <CardText>{resultName}</CardText>\n            </Card>\n          </Container>\n        </Col>\n      </Row>\n      <Link href=\"/\">\n        <a>Try Again</a>\n      </Link>\n    </>\n  );\n};\n\nconst Result = (props) => {\n  const { resultName, isCountDown } = props;\n\n  return (\n    <>\n      {isCountDown ? (\n        <ResultView resultName={resultName} />\n      ) : (\n        <Link href=\"/\">\n          <a>Try Again</a>\n        </Link>\n      )}\n    </>\n  );\n};\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}