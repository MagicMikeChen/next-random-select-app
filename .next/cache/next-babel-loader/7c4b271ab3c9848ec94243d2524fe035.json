{"ast":null,"code":"var _jsxFileName = \"/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Router from \"next/router\";\n\nconst ResultView = ({\n  resultName\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, resultName), __jsx(\"img\", {\n    alt: \"monster\",\n    src: `https://robohash.org/${resultName}?set=set4&size=300x300`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Try Again\")));\n};\n\nconst redirectPage = () => {\n  Router.push(\"/\");\n};\n\nconst Result = props => {\n  const {\n    resultName,\n    isCountDown\n  } = props;\n  return __jsx(React.Fragment, null, isCountDown ? __jsx(ResultView, {\n    resultName: resultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }) : redirectPage());\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/mikechen-mbp/Desktop/react_project/with-redux/components/result.js"],"names":["Link","Router","ResultView","resultName","redirectPage","push","Result","props","isCountDown"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAN,CADF,EAEE;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,GAAG,EAAG,wBAAuBA,UAAW,wBAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CANF,CADF;AAYD,CAbD;;AAeA,MAAMC,YAAY,GAAG,MAAM;AACzBH,EAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEJ,IAAAA,UAAF;AAAcK,IAAAA;AAAd,MAA8BD,KAApC;AAEA,SACE,4BAAGC,WAAW,GAAG,MAAC,UAAD;AAAY,IAAA,UAAU,EAAEL,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4CC,YAAY,EAAtE,CADF;AAGD,CAND;;AAOA,eAAeE,MAAf","sourcesContent":["import Link from \"next/link\";\nimport Router from \"next/router\";\n\nconst ResultView = ({ resultName }) => {\n  return (\n    <>\n      <div>{resultName}</div>\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${resultName}?set=set4&size=300x300`}\n      />\n      <Link href=\"/\">\n        <a>Try Again</a>\n      </Link>\n    </>\n  );\n};\n\nconst redirectPage = () => {\n  Router.push(\"/\");\n};\n\nconst Result = (props) => {\n  const { resultName, isCountDown } = props;\n\n  return (\n    <>{isCountDown ? <ResultView resultName={resultName} /> : redirectPage()}</>\n  );\n};\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}